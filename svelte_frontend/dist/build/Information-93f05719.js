
(function(l, r) { if (l.getElementById('livereloadscript')) return; r = l.createElement('script'); r.async = 1; r.src = '//' + (window.location.host || 'localhost').split(':')[0] + ':35729/livereload.js?snipver=1'; r.id = 'livereloadscript'; l.getElementsByTagName('head')[0].appendChild(r) })(window.document);
import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, e as element, g as space, h as attr_dev, a as add_location, b as insert_dev, k as append_dev, q as noop, f as detach_dev } from './main-133695a0.js';
import Item from './Item-ec4e2314.js';
import { P as Plus } from './Plus-9a544b69.js';

/* src/pages/Information.svelte generated by Svelte v3.32.1 */
const file = "src/pages/Information.svelte";

function create_fragment(ctx) {
	let div;
	let info;
	let h40;
	let t1;
	let p0;
	let t3;
	let h41;
	let t5;
	let p1;
	let t7;
	let h42;
	let t9;
	let p2;
	let t11;
	let moderators;
	let h43;
	let t13;
	let ul;
	let li0;
	let t15;
	let li1;
	let t17;
	let li2;
	let t19;
	let input;

	const block = {
		c: function create() {
			div = element("div");
			info = element("info");
			h40 = element("h4");
			h40.textContent = "Name:";
			t1 = space();
			p0 = element("p");
			p0.textContent = "Intro";
			t3 = space();
			h41 = element("h4");
			h41.textContent = "Info:";
			t5 = space();
			p1 = element("p");
			p1.textContent = "bla bla";
			t7 = space();
			h42 = element("h4");
			h42.textContent = "Workspace ID:";
			t9 = space();
			p2 = element("p");
			p2.textContent = "1337";
			t11 = space();
			moderators = element("moderators");
			h43 = element("h4");
			h43.textContent = "Moderators:";
			t13 = space();
			ul = element("ul");
			li0 = element("li");
			li0.textContent = "Jerry";
			t15 = space();
			li1 = element("li");
			li1.textContent = "Klas";
			t17 = space();
			li2 = element("li");
			li2.textContent = "Kuba";
			t19 = space();
			input = element("input");
			attr_dev(h40, "class", "svelte-xddzdo");
			add_location(h40, file, 6, 6, 128);
			add_location(p0, file, 7, 8, 152);
			attr_dev(h41, "class", "svelte-xddzdo");
			add_location(h41, file, 8, 6, 171);
			add_location(p1, file, 9, 8, 195);
			attr_dev(h42, "class", "svelte-xddzdo");
			add_location(h42, file, 10, 6, 216);
			add_location(p2, file, 11, 8, 248);
			add_location(info, file, 5, 2, 115);
			attr_dev(h43, "class", "svelte-xddzdo");
			add_location(h43, file, 15, 4, 292);
			add_location(li0, file, 17, 6, 328);
			add_location(li1, file, 18, 6, 349);
			add_location(li2, file, 19, 6, 369);
			add_location(ul, file, 16, 4, 317);
			attr_dev(input, "type", "text");
			attr_dev(input, "placeholder", "user id..");
			attr_dev(input, "class", "svelte-xddzdo");
			add_location(input, file, 21, 4, 397);
			add_location(moderators, file, 14, 2, 275);
			attr_dev(div, "class", "svelte-xddzdo");
			add_location(div, file, 4, 0, 107);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			append_dev(div, info);
			append_dev(info, h40);
			append_dev(info, t1);
			append_dev(info, p0);
			append_dev(info, t3);
			append_dev(info, h41);
			append_dev(info, t5);
			append_dev(info, p1);
			append_dev(info, t7);
			append_dev(info, h42);
			append_dev(info, t9);
			append_dev(info, p2);
			append_dev(div, t11);
			append_dev(div, moderators);
			append_dev(moderators, h43);
			append_dev(moderators, t13);
			append_dev(moderators, ul);
			append_dev(ul, li0);
			append_dev(ul, t15);
			append_dev(ul, li1);
			append_dev(ul, t17);
			append_dev(ul, li2);
			append_dev(moderators, t19);
			append_dev(moderators, input);
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Information", slots, []);
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Information> was created with unknown prop '${key}'`);
	});

	$$self.$capture_state = () => ({ Item, Plus });
	return [];
}

class Information extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Information",
			options,
			id: create_fragment.name
		});
	}
}

export default Information;
//# sourceMappingURL=Information-93f05719.js.map
